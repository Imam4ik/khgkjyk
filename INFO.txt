Приветствую всех читающих, и так, краткая навигация о сайте, БД, структуре кода и тп. 

(◕‿◕)

1. СТРУКТУРА КОДА

    1. Принцип написания кода:
        Код построен на маршутизаторе, все запросы идут в public/index.php, используется ООП (подробнее в Классы (1.3)).
        Маршутиразтор перебрасывает на контроллер, который в свою очередь сделает необходимую логику и подключит вид.

    2. Навигация по коду:

        Файлы сайта/папки имеют говорящие названия, здесь нет файлов ТутБылВася.php, будет несложно сориентироваться, но все же укажу что и где:

            app - Контроллеры и виды, они в свою очередь деляться тоже на 3 типа: для админов(admin), для пользователей (users), для обычных "проходных"(находятся прям в папках видов/контроллеров).
                Контроллер-папка для пользователей содержит ещё одну директорию check, где обрабатываются формы.
                Виды имеют такую же структуру, только есть ещё 2 папки - inc: footer,header и errors: страницы ошибок(404,500).

            config - Папка конфигурации сайта:
                config.php - содержание констант для абсолютных путей.
                db.php - конфигурация БД(сюда же и подключается ENV-значения из /.env).
                routes.php - список маршутов сайта с middleware-конфигурацией.

            public - Публичная папка сайта:
                index - Начало сессии, создание экземпляров классов DB(для работы в БД), PHPMailer(отправка писем), Router(маршутизатор)(см. Классы (1.3)).
                assets - Папка js,css,картинками. Насчет папки libs ничего сказать не могу, так как их сделали друзья-китайцы(прошлые работнички), а эти файлы достались от них.
            
            vendor - Composer файлы, как сказано выше с автоподключением классов и Dotenv для работой с БД.
                vendor/myfreee/core - "Ядро сайта"
                    funcs.php - Функции для работы с сайтом, имеют говорящее название.
                    classes (namespace: \myfreee\) - Классы в коде, в часности папка с классами Middleware (проверки на админа, авторизованного или обычного "проходого").

            ru,1 - Подарок из Китая, ничего об этих папок не знаю и не использовал

    3. Классы (ООП) - vendor/myfreee/core | namespace: \myfreee\

        1. Db - класс для работы с БД. Подключение осуществляется проверкой getInstance на существование экземпляпа класса Db. Основной метод: query - подготовленный запрос к БД.
        2. Router - класс маршутизатора, основной метод match - Перенаправляет пользователя к указанному контроллеру, если его нет/не пройден middleware/неправильный метод запроса - отдает 404 страницу.
        3. Validator - Валидатор для форм. Работает по принципу указаний значений и правил.
            
            Middleware:
                Admin - Проверка на администратора (в таблице users в поле admin должно быть вписано 57).
                Guest - Проверка на "проходного" пользователя (неавторизованного).
                Auth - Проверка на авторизованного пользователя.



2. БАЗА ДАННЫХ

    1. Все данные находятся в корневой директории .env, затем передаются в config/db.php и подключаются в public/index.php

    2. Таблицы: 
        1. promo - информация о промокодах
        2. users - пользователи
        3. payments - заявки на пополнение криптовалютой
        4. proxi - товары сайта
        5. cards - счета для оплаты по криптовалюте
        6. services - услуги клиентов  
